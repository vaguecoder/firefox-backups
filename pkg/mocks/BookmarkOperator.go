// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	bookmark "github.com/vaguecoder/firefox-backups/pkg/bookmark"

	mock "github.com/stretchr/testify/mock"
)

// BookmarkOperator is an autogenerated mock type for the BookmarkOperator type
type BookmarkOperator struct {
	mock.Mock
}

// GetBookmarks provides a mock function with given fields: _a0
func (_m *BookmarkOperator) GetBookmarks(_a0 context.Context) ([]bookmark.Bookmark, error) {
	ret := _m.Called(_a0)

	var r0 []bookmark.Bookmark
	if rf, ok := ret.Get(0).(func(context.Context) []bookmark.Bookmark); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]bookmark.Bookmark)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBookmarkOperator interface {
	mock.TestingT
	Cleanup(func())
}

// NewBookmarkOperator creates a new instance of BookmarkOperator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBookmarkOperator(t mockConstructorTestingTNewBookmarkOperator) *BookmarkOperator {
	mock := &BookmarkOperator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
